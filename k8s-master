( yum install -y kubelet-$k8s_version-0 docker
yum install -y kubeadm-$k8s_version-0
systemctl enable docker kubelet
systemctl restart docker kubelet
kubeadm config images list | xargs -n1 -P0 docker pull
kubeadm init --apiserver-advertise-address=$ip_master --pod-network-cidr=10.244.0.0/16
mkdir /root/.kube
cp /etc/kubernetes/admin.conf /root/.kube/config
kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
if [ $training = false ]; then
  k8s_version=$(kubectl version --short | awk -Fv '/Server Version: / {print $3}')
  url="https://install.portworx.com/?kbver=$k8s_version&b=true&c=$cluster_name-$c&stork=true&st=k8s&lh=true"
  if [ $journal = true ]; then
    while : ; do
      journal_dev=$(ssh -oConnectTimeout=1 -oStrictHostKeyChecking=no node-$c-1 lsblk | grep 3G | tail -f | cut -f 1 -d " ")
      [ $? -eq 0 ] && break
      sleep 5
    done
    url="$url&j=/dev/$journal_dev"
  fi
  curl -so /tmp/px.yml $url
  [ "$version" ] && sed -ri s/oci-monitor:[0-9\.]+/oci-monitor:$version/ /tmp/px.yml
  kubectl apply -f /tmp/px.yml
  while : ; do
    STORK_POD=$(kubectl get pods -n kube-system -l name=stork -o jsonpath='{.items[0].metadata.name}')
    kubectl cp -n kube-system $STORK_POD:/storkctl/linux/storkctl /usr/bin/storkctl
    [ $? -eq 0 ] && break
    sleep 5
  done
  chmod +x /usr/bin/storkctl
  if [ $c != 1 ]; then
    while : ; do
      token=$(ssh -oConnectTimeout=1 -oStrictHostKeyChecking=no node-$c-1 pxctl cluster token show | cut -f 3 -d " ")
      echo $token | grep -Eq '\w{128}'
      [ $? -eq 0 ] && break
      sleep 5
    done
    storkctl generate clusterpair -n default remotecluster-$c | sed "/insert_storage_options_here/c\    ip: node-$c-1\n    token: $token" >/root/cp.yaml
    while : ; do
      cat /root/cp.yaml | ssh -oConnectTimeout=1 -oStrictHostKeyChecking=no master-1 kubectl apply -f -
      [ $? -eq 0 ] && break
      sleep 5
    done
  fi
fi
echo End) >&/var/log/vagrant.bootstrap &
